1 - a) bis.w #1, R5

b) bis.w #3, R6

c) and.w #FFFBh, R7

d) and.w #FFF3h, R8

e) xor.w #8000h, R9

f) xor.w #F000h, R10

2 - 
  cmp R7,R8		; i = R7 | j = R8
	jl ELSE			; R8 < R7 || R7 > R8
	mov.w R5,R4		; f = g		
	add.w R6,R4		; f += h
	add.w #10, R4	; f += 10
	jmp END
	
	ELSE: mov.w R5,R4		; f = g
	sub.w R6,R4		; f -= h
	sub.w #10,R4	; f -= 10
	
	END
  
3 - LOOP:mov.w R7,R12		; tmp = i
	  rla R12					; tmp *= 2
	  add.w R10, R12			; tmp += save -> tmp = save + 2*i
	
  	cmp 0(R12),	R11			; cmp save[i], k
  	jeq END					; pular se save[i] == k
  	inc.w R7				; i++
  	jmp LOOP
	
    END
    
 4 - 
  clr.w R7		;i = 0
	LOOP:cmp #100, R7	; cmp #100,R7
	jge END				; FIM do loop se i >= 100
	
	mov.w R7,R12		; tmp = i
	rla R12				; tmp *= 2
	add.w R9, R12		; tmp += A -> tmp = A + 2*i
	
	mov.w R7,R13		; tmp2 = i*2
	rla R13				; tmp2 *= 2
	mov.w 0(R12), R13	; 0(tmp) = 2*i -> A[i] = 2*i
	
	inc.w R7			; i++
	jmp LOOP
  
  END
  
5 - 
  mov.w #99, R7		;i = 0
	LOOP:cmp #0, R7	; cmp #100,R7
	jl END				; FIM do loop se i < 0
	
	mov.w R7,R12		; tmp = i
	rla R12				; tmp *= 2
	add.w R9, R12		; tmp += A -> tmp = A + 2*i
	
	mov.w R7,R13		; tmp2 = i*2
	rla R13				; tmp2 *= 2
	mov.w 0(R12), R13	; 0(tmp) = 2*i -> A[i] = 2*i
	
	dec.w R7			; i--
	jmp LOOP
  END
