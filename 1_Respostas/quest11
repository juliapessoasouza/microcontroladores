1 -

void Atraso(volatile unsigned int x)
{

	// Periodo = 1us do clock -> Timer_A++ a cada 1us
	int i = 0; // Contador
	TA0CCR0 = 1000-1;
	TA0CTL = TASSEL_2 + ID_0 + MC_1;
	
	while(i<x)
	{
		while((TA0CTL & TAIFG)==0); // Só para quando TimerA chega a 1000. Só sai do while a cada 1ms;
		TA0CTL &= ~TAIFG;
		i++;
	}

	TA0CTL=MC_0;
	
}

2-

P1DIR = LED1 + LED2;
for(;;)
{
	P1OUT ^= LED1;
	P1OUT ^= ~LED2;
	Atraso(10);
}

3-

P1DIR = LED1 + LED2;
for(;;)
{
	P1OUT ^= LED1;
	P1OUT ^= ~LED2;
	Atraso(50);
}

4-

P1DIR = LED1 + LED2;
for(;;)
{
	P1OUT ^= LED1;
	P1OUT ^= ~LED2;
	Atraso(1000);
}

5-

P1DIR = LED1 + LED2;
for(;;)
{
	P1OUT ^= LED1;
	P1OUT ^= ~LED2;
	Atraso(2000);
}

6-

int main(void)
{
	WDTCTL = WDTPW + WDTHOLD;	// Stop WDT
	
	BCSCTL1 = CALBC1_1MHZ;		//MCLK e SMCLK @ 1MHz

	P1OUT &= ~LED1;
	P1DIR |= LED1;
	TA0CCR0 = 1000-1;
	TA0CTL = TASSEL_2 + ID_0 + MC_1 + TAIE;
	_BIS_SR(LPM0_bits+GIE);
	return 0;
}

int count = 0;
interrupt(TIMER0_A1_VECTOR) TA0_ISR(void)
{
	count++;
	if(count < 10) return;
	P1OUT ^= LED1;
	TA0CTL &= ~TAIFG;
}

7-

{
	int paralelo = P1IN & 0x0F;
	P2OUT |= 0x1;			// Inicio
	for(int j = 0; j < 8; j++)
	{
		int value = paralelo & (1 << j) == (1 << j);
		if(value)
			P2OUT |= value;
		else
			P2OUT &= value;
			
	}
	P2OUT &= 0x0;	// Fim
}
